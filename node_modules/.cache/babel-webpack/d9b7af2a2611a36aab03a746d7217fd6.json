{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Admin/Desktop/Web Developement Course/ANGULAR/employeeapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\Users\\\\Admin\\\\Desktop\\\\Web Developement Course\\\\ANGULAR\\\\employeeapp\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./employeeForm.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./employeeForm.component.css\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ApiService } from '../shared/api.service';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { AngularFireStorage } from '@angular/fire/compat/storage';\nimport { employeeData } from './employeeForm.model';\nimport { ngxCsv } from 'ngx-csv';\nlet employeeFormComponent = class employeeFormComponent {\n  constructor(fb, ApiService, fireStoreDb, storage) {\n    this.fb = fb;\n    this.ApiService = ApiService;\n    this.fireStoreDb = fireStoreDb;\n    this.storage = storage; ////////////////////////////////////////-------GOBAL VARIABLES DECLARED HERE----///////////////////////////////////////\n\n    this.employeeModelObject = new employeeData();\n    this.myLocalArray = [];\n    this.formattedArray = {};\n    this.sortingOrder = 'ascending'; ///////////////////////////////////-------NEW EMPLOYEE FORM END HERE----///////////////////////////////////////////////\n    ////////////////////////////////////////-------EDIT FORM START HERE----////////////////////////////////////////////////\n\n    this.editForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      phone: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]),\n      address: new FormControl('', [Validators.required]),\n      picture: new FormControl('', Validators.required)\n    }); ////////////////////////////////////////-------NEW EMPLOYEE FORM----/////////////////////////////////////////////////\n\n    this.employeeForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      phone: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]),\n      address: new FormControl('', Validators.required),\n      picture: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit() {\n    this.ApiService.ngxServiceLoader();\n    this.getAllData(); //get data from firestore API call\n  } ////////////////////////////////////////-------EDIT METHOD----/////////////////////////////////////////////////////////\n\n\n  onEdit(id) {\n    const mySelectedIndexFilter = this.myLocalArray.filter(data => data.id === id);\n    this.editForm.setValue({\n      name: mySelectedIndexFilter[0].name,\n      phone: mySelectedIndexFilter[0].phone,\n      email: mySelectedIndexFilter[0].email,\n      address: mySelectedIndexFilter[0].address,\n      picture: mySelectedIndexFilter[0].picture\n    });\n    this.base64Image = mySelectedIndexFilter[0].picture;\n    this.editableId = id; //  this.ApiService.sendonEditButton(id);\n  } ////////////////////////////////////////-------UPDATE BUTTON METHOD----///////////////////////////////////////////////\n\n\n  onUpdate() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.ApiService.ngxServiceLoader();\n\n      var uploadedImage = Date.now();\n      const filePath = `employeeImages/${uploadedImage}`;\n      const snap = yield _this.storage.upload(filePath, _this.selectedFile);\n\n      _this.getUrlForImage(snap);\n    })();\n  }\n\n  getUrlForImage(snap) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const url = yield snap.ref.getDownloadURL();\n\n      if (url) {\n        const userObject = _this2.editForm.value;\n        debugger;\n        userObject.id = _this2.editableId;\n        userObject['picture'] = url; // it will upload my picture on same index\n\n        _this2.ApiService.updateUser(userObject, _this2.editableId);\n\n        _this2.editForm.reset();\n      }\n    })();\n  } /////////////////////////////////-------UPLOAD NEW FORM DATA + IMAGE ON FIREBASE----///////////////////////////////////\n\n\n  uploadDataoFireStorage() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.ApiService.ngxServiceLoader();\n\n      var uploadedImage = Date.now();\n      const filePath = `employeeImages/${uploadedImage}`;\n      const snap = yield _this3.storage.upload(filePath, _this3.selectedFile);\n\n      _this3.geturl(snap);\n    })();\n  }\n\n  geturl(snap) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const url = yield snap.ref.getDownloadURL();\n      _this4.url = url;\n\n      if (url) {\n        let userObject = _this4.employeeForm.value;\n        userObject['picture'] = url;\n\n        const id = _this4.fireStoreDb.createId();\n\n        userObject['id'] = id;\n\n        _this4.ApiService.addUser(userObject);\n\n        _this4.employeeForm.reset();\n      }\n    })();\n  } ////////////////////////////////////////-------DELETE BUTTON METHOD----////////////////////////////////////////////////\n\n\n  deleteEmployee(deleteIndexId) {\n    // debugger;\n    this.ApiService.ngxServiceLoader();\n    this.ApiService.deleteUser(deleteIndexId);\n  } ////////////////////////////////////////-------GET DATA FROM FIREBASE----//////////////////////////////////////////////\n\n\n  getAllData() {\n    this.ApiService.getEmployees().subscribe(fireBaseData => {\n      this.myLocalArray = fireBaseData;\n    });\n  }\n\n  addFile(event) {\n    this.selectedFile = event.target.files[0];\n    this.ApiService.ngxServiceLoader();\n  } ////////////////////////////////////////-------EXPORT CSV FILE METHOD----//////////////////////////////////////////////\n\n\n  exportCSV() {\n    var options = {\n      fieldSeparator: ',',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: true,\n      title: 'Company Employee Details',\n      useBom: true,\n      noDownload: false,\n      headers: [\"Name\", \"Email\", \"Phone\", \"Address\", \"Id\", \"Picture\"]\n    };\n    new ngxCsv(this.myLocalArray, \"EmployeeReport\", options);\n  } ////////////////////////////////////////-------SORTING BUTTON METHOD----///////////////////////////////////////////////\n\n\n  sortArray(property, order) {\n    if (order == 'ascending') {\n      this.myLocalArray.sort((a, b) => b[property] > a[property] ? -1 : 1);\n      this.sortingOrder = 'descending';\n    } else {\n      this.myLocalArray.sort((a, b) => b[property] > a[property] ? 1 : -1);\n      this.sortingOrder = 'ascending';\n    }\n  } ////////////////////////////////////////-------RESET BUTTON METHOD----/////////////////////////////////////////////////\n\n\n  resetForm() {\n    this.employeeForm.reset();\n  }\n\n  get f() {\n    return this.employeeForm.controls;\n  }\n\n};\n\nemployeeFormComponent.ctorParameters = () => [{\n  type: FormBuilder\n}, {\n  type: ApiService\n}, {\n  type: AngularFirestore\n}, {\n  type: AngularFireStorage\n}];\n\nemployeeFormComponent = __decorate([Component({\n  selector: 'employeeFormComponent',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], employeeFormComponent);\nexport { employeeFormComponent };","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Web Developement Course/ANGULAR/employeeapp/src/app/employeeForm/employeeForm.component.ts"],"names":["__decorate","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","Component","FormGroup","FormBuilder","FormControl","Validators","ApiService","AngularFirestore","AngularFireStorage","employeeData","ngxCsv","employeeFormComponent","constructor","fb","fireStoreDb","storage","employeeModelObject","myLocalArray","formattedArray","sortingOrder","editForm","name","required","phone","email","pattern","address","picture","employeeForm","ngOnInit","ngxServiceLoader","getAllData","onEdit","id","mySelectedIndexFilter","filter","data","setValue","base64Image","editableId","onUpdate","uploadedImage","Date","now","filePath","snap","upload","selectedFile","getUrlForImage","url","ref","getDownloadURL","userObject","value","updateUser","reset","uploadDataoFireStorage","geturl","createId","addUser","deleteEmployee","deleteIndexId","deleteUser","getEmployees","subscribe","fireBaseData","addFile","event","target","files","exportCSV","options","fieldSeparator","quoteStrings","decimalseparator","showLabels","showTitle","title","useBom","noDownload","headers","sortArray","property","order","sort","a","b","resetForm","f","controls","ctorParameters","type","selector","template","styles"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\Users\\\\Admin\\\\Desktop\\\\Web Developement Course\\\\ANGULAR\\\\employeeapp\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./employeeForm.component.html\";\r\nimport __NG_CLI_RESOURCE__1 from \"./employeeForm.component.css\";\r\nimport { Component } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ApiService } from '../shared/api.service';\r\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\r\nimport { AngularFireStorage } from '@angular/fire/compat/storage';\r\nimport { employeeData } from './employeeForm.model';\r\nimport { ngxCsv } from 'ngx-csv';\r\nlet employeeFormComponent = class employeeFormComponent {\r\n    constructor(fb, ApiService, fireStoreDb, storage) {\r\n        this.fb = fb;\r\n        this.ApiService = ApiService;\r\n        this.fireStoreDb = fireStoreDb;\r\n        this.storage = storage;\r\n        ////////////////////////////////////////-------GOBAL VARIABLES DECLARED HERE----///////////////////////////////////////\r\n        this.employeeModelObject = new employeeData;\r\n        this.myLocalArray = [];\r\n        this.formattedArray = {};\r\n        this.sortingOrder = 'ascending';\r\n        ///////////////////////////////////-------NEW EMPLOYEE FORM END HERE----///////////////////////////////////////////////\r\n        ////////////////////////////////////////-------EDIT FORM START HERE----////////////////////////////////////////////////\r\n        this.editForm = new FormGroup({\r\n            name: new FormControl('', Validators.required),\r\n            phone: new FormControl('', Validators.required),\r\n            email: new FormControl('', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]),\r\n            address: new FormControl('', [Validators.required]),\r\n            picture: new FormControl('', Validators.required)\r\n        });\r\n        ////////////////////////////////////////-------NEW EMPLOYEE FORM----/////////////////////////////////////////////////\r\n        this.employeeForm = new FormGroup({\r\n            name: new FormControl('', Validators.required),\r\n            phone: new FormControl('', Validators.required),\r\n            email: new FormControl('', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]),\r\n            address: new FormControl('', Validators.required),\r\n            picture: new FormControl('', Validators.required)\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.ApiService.ngxServiceLoader();\r\n        this.getAllData(); //get data from firestore API call\r\n    }\r\n    ////////////////////////////////////////-------EDIT METHOD----/////////////////////////////////////////////////////////\r\n    onEdit(id) {\r\n        const mySelectedIndexFilter = this.myLocalArray.filter((data) => data.id === id);\r\n        this.editForm.setValue({\r\n            name: mySelectedIndexFilter[0].name,\r\n            phone: mySelectedIndexFilter[0].phone,\r\n            email: mySelectedIndexFilter[0].email,\r\n            address: mySelectedIndexFilter[0].address,\r\n            picture: mySelectedIndexFilter[0].picture\r\n        });\r\n        this.base64Image = mySelectedIndexFilter[0].picture;\r\n        this.editableId = id;\r\n        //  this.ApiService.sendonEditButton(id);\r\n    }\r\n    ////////////////////////////////////////-------UPDATE BUTTON METHOD----///////////////////////////////////////////////\r\n    async onUpdate() {\r\n        this.ApiService.ngxServiceLoader();\r\n        var uploadedImage = Date.now();\r\n        const filePath = `employeeImages/${uploadedImage}`;\r\n        const snap = await this.storage.upload(filePath, this.selectedFile);\r\n        this.getUrlForImage(snap);\r\n    }\r\n    async getUrlForImage(snap) {\r\n        const url = await snap.ref.getDownloadURL();\r\n        if (url) {\r\n            const userObject = this.editForm.value;\r\n            debugger;\r\n            userObject.id = this.editableId;\r\n            userObject['picture'] = url; // it will upload my picture on same index\r\n            this.ApiService.updateUser(userObject, this.editableId);\r\n            this.editForm.reset();\r\n        }\r\n    }\r\n    /////////////////////////////////-------UPLOAD NEW FORM DATA + IMAGE ON FIREBASE----///////////////////////////////////\r\n    async uploadDataoFireStorage() {\r\n        this.ApiService.ngxServiceLoader();\r\n        var uploadedImage = Date.now();\r\n        const filePath = `employeeImages/${uploadedImage}`;\r\n        const snap = await this.storage.upload(filePath, this.selectedFile);\r\n        this.geturl(snap);\r\n    }\r\n    async geturl(snap) {\r\n        const url = await snap.ref.getDownloadURL();\r\n        this.url = url;\r\n        if (url) {\r\n            let userObject = this.employeeForm.value;\r\n            userObject['picture'] = url;\r\n            const id = this.fireStoreDb.createId();\r\n            userObject['id'] = id;\r\n            this.ApiService.addUser(userObject);\r\n            this.employeeForm.reset();\r\n        }\r\n    }\r\n    ////////////////////////////////////////-------DELETE BUTTON METHOD----////////////////////////////////////////////////\r\n    deleteEmployee(deleteIndexId) {\r\n        // debugger;\r\n        this.ApiService.ngxServiceLoader();\r\n        this.ApiService.deleteUser(deleteIndexId);\r\n    }\r\n    ////////////////////////////////////////-------GET DATA FROM FIREBASE----//////////////////////////////////////////////\r\n    getAllData() {\r\n        this.ApiService.getEmployees().subscribe((fireBaseData) => {\r\n            this.myLocalArray = fireBaseData;\r\n        });\r\n    }\r\n    addFile(event) {\r\n        this.selectedFile = event.target.files[0];\r\n        this.ApiService.ngxServiceLoader();\r\n    }\r\n    ////////////////////////////////////////-------EXPORT CSV FILE METHOD----//////////////////////////////////////////////\r\n    exportCSV() {\r\n        var options = {\r\n            fieldSeparator: ',',\r\n            quoteStrings: '\"',\r\n            decimalseparator: '.',\r\n            showLabels: true,\r\n            showTitle: true,\r\n            title: 'Company Employee Details',\r\n            useBom: true,\r\n            noDownload: false,\r\n            headers: [\"Name\", \"Email\", \"Phone\", \"Address\", \"Id\", \"Picture\"]\r\n        };\r\n        new ngxCsv(this.myLocalArray, \"EmployeeReport\", options);\r\n    }\r\n    ////////////////////////////////////////-------SORTING BUTTON METHOD----///////////////////////////////////////////////\r\n    sortArray(property, order) {\r\n        if (order == 'ascending') {\r\n            this.myLocalArray.sort((a, b) => b[property] > a[property] ? -1 : 1);\r\n            this.sortingOrder = 'descending';\r\n        }\r\n        else {\r\n            this.myLocalArray.sort((a, b) => b[property] > a[property] ? 1 : -1);\r\n            this.sortingOrder = 'ascending';\r\n        }\r\n    }\r\n    ////////////////////////////////////////-------RESET BUTTON METHOD----/////////////////////////////////////////////////\r\n    resetForm() {\r\n        this.employeeForm.reset();\r\n    }\r\n    get f() {\r\n        return this.employeeForm.controls;\r\n    }\r\n};\r\nemployeeFormComponent.ctorParameters = () => [\r\n    { type: FormBuilder },\r\n    { type: ApiService },\r\n    { type: AngularFirestore },\r\n    { type: AngularFireStorage }\r\n];\r\nemployeeFormComponent = __decorate([\r\n    Component({\r\n        selector: 'employeeFormComponent',\r\n        template: __NG_CLI_RESOURCE__0,\r\n        styles: [__NG_CLI_RESOURCE__1]\r\n    })\r\n], employeeFormComponent);\r\nexport { employeeFormComponent };\r\n"]},"metadata":{},"sourceType":"module"}
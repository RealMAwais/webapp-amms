{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Admin/Desktop/Web Developement Course/ANGULAR/webapp-amms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet HomeComponent = class HomeComponent {\n  constructor(fb, ApiService, firestore, fireStorage, router) {\n    this.fb = fb;\n    this.ApiService = ApiService;\n    this.firestore = firestore;\n    this.fireStorage = fireStorage;\n    this.router = router;\n    this.buildingArray = []; ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    this.companyTypeOptions = [{\n      value: 'Admin'\n    }, {\n      value: 'Owner'\n    }];\n    this.cityOptions = [{\n      value: 'Bronx'\n    }, {\n      value: 'Brooklyn'\n    }, {\n      value: 'Manhattan'\n    }, {\n      value: 'Queens'\n    }, {\n      value: 'State Island'\n    }];\n    this.propertyOptions = [{\n      value: 'Co-op Apartments'\n    }, {\n      value: 'Residential'\n    }, {\n      value: 'Commercial'\n    }, {\n      value: 'Residential/Commercial'\n    }];\n    this.unitTypeOptions = [{\n      value: 'Apartment'\n    }, {\n      value: 'Studio'\n    }, {\n      value: 'Office'\n    }, {\n      value: 'Commercial'\n    }];\n    this.unitNoOptions = [{\n      value: '1L'\n    }, {\n      value: '1R'\n    }, {\n      value: '2L'\n    }, {\n      value: '2R'\n    }, {\n      value: '3L'\n    }, {\n      value: '3R'\n    }, {\n      value: '4L'\n    }, {\n      value: '4R'\n    }];\n    this.incomeTypeOptions = [{\n      value: 'Profit Earned'\n    }, {\n      value: 'Royalties'\n    }];\n    this.expenseTypeOptions = [{\n      value: 'Advertisement'\n    }, {\n      value: 'Auto & Travel'\n    }, {\n      value: 'Cleaning & Maintenance'\n    }, {\n      value: 'Commission'\n    }, {\n      value: 'Depreciation'\n    }, {\n      value: 'Electric'\n    }, {\n      value: 'Employee Salary'\n    }, {\n      value: 'Fuel / Heat'\n    }, {\n      value: 'Insurance'\n    }, {\n      value: 'Interest (Non-Mortgage)'\n    }, {\n      value: 'Legal & Professional Fees'\n    }, {\n      value: 'Management Fee'\n    }, {\n      value: 'Mortgage Interest Paid to Banks'\n    }, {\n      value: 'New Construction'\n    }, {\n      value: 'Other'\n    }, {\n      value: 'Repair'\n    }];\n    this.taskTypeOptions = [{\n      value: 'Plumbing'\n    }, {\n      value: 'Heating'\n    }, {\n      value: 'Repair'\n    }, {\n      value: 'Air Conditioning'\n    }];\n    this.taskStatusOptions = [{\n      value: 'Completed'\n    }, {\n      value: 'In Progress'\n    }, {\n      value: 'On Hold'\n    }];\n    this.yearOptions = [{\n      value: '2011'\n    }, {\n      value: '2012'\n    }, {\n      value: '2013'\n    }, {\n      value: '2014'\n    }, {\n      value: '2015'\n    }, {\n      value: '2016'\n    }, {\n      value: '2017'\n    }, {\n      value: '2018'\n    }, {\n      value: '2019'\n    }, {\n      value: '2020'\n    }, {\n      value: '2021'\n    }, {\n      value: '2022'\n    }, {\n      value: '2023'\n    }];\n    this.buildingDataForm = new FormGroup({\n      owner: new FormControl('', Validators.required),\n      adminCompany: new FormControl('', Validators.required),\n      propertyType: new FormControl('', Validators.required),\n      address: new FormControl('', Validators.required),\n      city: new FormControl('', Validators.required),\n      state: new FormControl('New York'),\n      zip: new FormControl('', Validators.required),\n      wsh_dry: new FormControl(''),\n      elevator: new FormControl(''),\n      totalUnit: new FormControl(''),\n      amount_fine: new FormControl(''),\n      remarks: new FormControl(''),\n      Units: new FormControl('')\n    });\n    this.unitDataForm = new FormGroup({\n      building: new FormControl(''),\n      unitNo: new FormControl(''),\n      unitType: new FormControl('', Validators.required),\n      beds: new FormControl(''),\n      baths: new FormControl(''),\n      floors: new FormControl(''),\n      rent: new FormControl(''),\n      security: new FormControl('')\n    });\n    this.companyForm = new FormGroup({\n      companyName: new FormControl('SMYM Realty'),\n      city: new FormControl('', Validators.required),\n      state: new FormControl({\n        value: 'New York',\n        disabled: true\n      }),\n      address: new FormControl(''),\n      companyType: new FormControl('', Validators.required),\n      zip: new FormControl(''),\n      phone: new FormControl(''),\n      mobile: new FormControl(['', Validators.required, Validators.minLength(7)]),\n      email: new FormControl('', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")])\n    });\n    this.leaseForm = new FormGroup({\n      building: new FormControl(''),\n      city: new FormControl('', Validators.required),\n      state: new FormControl({\n        value: 'New York',\n        disabled: true\n      }),\n      unitNo: new FormControl(''),\n      firstName: new FormControl('', Validators.required),\n      lastName: new FormControl('', Validators.required),\n      socialSecurity: new FormControl(''),\n      phone: new FormControl(''),\n      mobile: new FormControl(['', Validators.required, Validators.minLength(7)]),\n      legalRent: new FormControl(''),\n      prefRent: new FormControl(''),\n      securityHeld: new FormControl(''),\n      leaseStartDate: new FormControl(''),\n      leaseEndDate: new FormControl(''),\n      email: new FormControl('', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]),\n      remarks: new FormControl('')\n    });\n    this.incomeForm = new FormGroup({\n      incomeType: new FormControl(''),\n      amount: new FormControl(''),\n      dateOfIncome: new FormControl(''),\n      remarks: new FormControl('')\n    });\n    this.expenseForm = new FormGroup({\n      building: new FormControl('586 Union Street'),\n      expenseType: new FormControl('', Validators.required),\n      amountDue: new FormControl(''),\n      amountPaid: new FormControl(''),\n      dueDate: new FormControl(''),\n      datePaid: new FormControl(''),\n      comments: new FormControl('')\n    });\n    this.taskForm = new FormGroup({\n      building: new FormControl('586 Union Street'),\n      taskType: new FormControl('', Validators.required),\n      unitNo: new FormControl(''),\n      taskStatus: new FormControl(''),\n      taskStartDate: new FormControl(''),\n      taskEndDate: new FormControl(''),\n      taskDescription: new FormControl('')\n    });\n    this.employeeForm = new FormGroup({\n      building: new FormControl({\n        value: '586 Union Street',\n        disabled: false\n      }),\n      firstName: new FormControl('', Validators.required),\n      lastName: new FormControl('', Validators.required),\n      employementStartDate: new FormControl(''),\n      employementEndDate: new FormControl(''),\n      salary: new FormControl(''),\n      remarks: new FormControl('')\n    });\n    this.rentForm = new FormGroup({\n      building: new FormControl({\n        value: '586 Union Street',\n        disabled: false\n      }),\n      month: new FormControl('', Validators.required),\n      year: new FormControl('', Validators.required),\n      tenantName: new FormControl('', Validators.required),\n      unitNo: new FormControl(''),\n      discount: new FormControl(''),\n      charges: new FormControl(''),\n      rent: new FormControl('', Validators.required),\n      paidRent: new FormControl(''),\n      rentDueDate: new FormControl(''),\n      datePaid: new FormControl(''),\n      previousBalance: new FormControl(''),\n      chequeNo: new FormControl(''),\n      bankName: new FormControl(''),\n      comments: new FormControl(''),\n      managementFee: new FormControl(''),\n      garageFee: new FormControl(''),\n      storageSpaceFee: new FormControl(''),\n      antennaFee: new FormControl(''),\n      internetFee: new FormControl('')\n    });\n    this.singleRentForm = new FormGroup({\n      building: new FormControl({\n        value: '586 Union Street',\n        disabled: false\n      }),\n      leaseID: new FormControl(''),\n      month: new FormControl(''),\n      year: new FormControl(''),\n      tenantName: new FormControl(''),\n      unitNo: new FormControl(''),\n      discount: new FormControl(''),\n      charges: new FormControl(''),\n      rent: new FormControl(''),\n      paidRent: new FormControl(''),\n      rentDueDate: new FormControl(''),\n      datePaid: new FormControl(''),\n      previousBalance: new FormControl(''),\n      chequeNo: new FormControl(''),\n      bankName: new FormControl(''),\n      comments: new FormControl('')\n    });\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.getBuildingsData();\n    })();\n  }\n\n  getBuildingsData() {\n    this.ApiService.getBuildingsAPI().subscribe(fireBaseData => {\n      this.buildingArray = fireBaseData;\n      console.log('buildingarray', this.buildingArray);\n    });\n  } /////////////////////////////////------ADD BUILDING DATA TO FIRESTORE------///////////////////////////////////\n\n\n  addBuildingDataToFirestore() {\n    let userObject = this.buildingDataForm.value;\n    const id = this.firestore.createId();\n    userObject['id'] = id;\n    this.ApiService.addBuilding(userObject);\n    this.buildingDataForm.reset();\n  } /////////////////////////////////------ADD UNIT DATA TO FIRESTORE------///////////////////////////////////\n\n\n  onBuilingDropDown(event) {\n    this.selectedBuildingId = event.target.value;\n    console.log('building dropdown id: ', this.selectedBuildingId);\n  } /////////////////////////////////------UNIT DETAILS FOR LEASE MODAL----//////////////////////////////////\n\n\n  unitDropdownforLease() {\n    const id = this.selectedBuildingId;\n  }\n\n  addUnitDataToFirestore() {\n    const selectedunitNo = this.unitDataForm.value.unitNo;\n    console.log('selectedunitNo : ', selectedunitNo);\n    const unitObject = {\n      [selectedunitNo]: this.unitDataForm.value\n    };\n    console.log('unitObject', unitObject);\n    this.ApiService.updateUnitToBuilding(unitObject, this.selectedBuildingId); // this.resetUnitForm();\n  } ////////////////////////////////////////-------FORM CONTROL METHOD----/////////////////////////////////////////////////\n\n\n  get fBuild() {\n    return this.buildingDataForm.controls;\n  }\n\n  get fUnit() {\n    return this.unitDataForm.controls;\n  }\n\n  get fCompany() {\n    return this.companyForm.controls;\n  }\n\n  get fLease() {\n    return this.leaseForm.controls;\n  }\n\n  get fIncome() {\n    return this.incomeForm.controls;\n  }\n\n  get fExpense() {\n    return this.expenseForm.controls;\n  }\n\n  get fTask() {\n    return this.taskForm.controls;\n  }\n\n  get fEmployee() {\n    return this.employeeForm.controls;\n  }\n\n  get fRent() {\n    return this.rentForm.controls;\n  }\n\n  get fSingleRent() {\n    return this.singleRentForm.controls;\n  }\n\n  submitBuildingForm() {\n    console.log('buildingDataForm', this.buildingDataForm.value);\n  }\n\n  submitCompanyForm() {\n    console.log('companyForm', this.companyForm.value);\n  }\n\n  submitLeaseForm() {\n    console.log('leaseForm', this.leaseForm.value);\n  }\n\n  submitIncomeForm() {\n    console.log('incomeForm', this.incomeForm.value);\n  }\n\n  submitExpenseForm() {\n    console.log('expenseForm', this.expenseForm.value);\n  }\n\n  submitTaskForm() {\n    console.log('taskForm', this.taskForm.value);\n  }\n\n  submitEmployeeForm() {\n    console.log('employeeForm', this.employeeForm.value);\n  }\n\n  submitRentForm() {\n    console.log('rentForm', this.rentForm.value);\n  }\n\n  submitSingleRentForm() {\n    console.log('singleRentForm', this.singleRentForm.value);\n  } ////////////////////////////////////////-------RESET BUTTON METHOD----/////////////////////////////////////////////////\n\n\n  resetBuildingForm() {\n    this.buildingDataForm.reset();\n  }\n\n  resetUnitForm() {\n    this.unitDataForm.reset();\n  }\n\n  resetCompanyForm() {\n    this.companyForm.reset();\n  }\n\n  resetLeaseForm() {\n    this.leaseForm.reset();\n  }\n\n  resetIncomeForm() {\n    this.incomeForm.reset();\n  }\n\n  resetExpenseForm() {\n    this.expenseForm.reset();\n  }\n\n  resetTaskForm() {\n    this.taskForm.reset();\n  }\n\n  resetEmployeeForm() {\n    this.employeeForm.reset();\n  }\n\n  resetRentForm() {\n    this.rentForm.reset();\n  }\n\n  resetSingleRentForm() {\n    this.singleRentForm.reset();\n  } ////////////////////////////////////////-------DELETE BUTTON METHOD----////////////////////////////////////////////////\n\n\n  deleteLease(deleteIndexId) {// debugger;\n    // this.ApiService.deleteUser(deleteIndexId);\n  }\n\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  styles: []\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\Web Developement Course\\ANGULAR\\webapp-amms\\src\\app\\home\\home.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { OnInit, Component, DebugNode } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ApiService } from '../services/api.service';\nimport { Model } from 'src/app/model.model'\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { AngularFireStorage, AngularFireStorageReference } from '@angular/fire/compat/storage';\nimport firebase from 'firebase/compat';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  /////////////////////////////////////\n  buildingDataForm: FormGroup\n  unitDataForm: FormGroup\n  companyForm: FormGroup\n  leaseForm: FormGroup\n  incomeForm: FormGroup\n  expenseForm: FormGroup\n  taskForm: FormGroup\n  employeeForm: FormGroup\n  rentForm: FormGroup\n  singleRentForm: FormGroup\n  /////////////////////////////////////\n\n  deleteIndexId: any;\n  buildingArray: any = [];\n  selectedBuildingId: any;\n\n\n  async ngOnInit() {\n    await this.getBuildingsData();\n  }\n\n  getBuildingsData() {\n    this.ApiService.getBuildingsAPI().subscribe((fireBaseData: any) => {\n      this.buildingArray = fireBaseData;\n      console.log('buildingarray', this.buildingArray);\n    });\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private ApiService: ApiService,\n    private firestore: AngularFirestore,\n    private fireStorage: AngularFireStorage,\n    public router: Router\n  ) {\n\n\n    this.buildingDataForm = new FormGroup({\n      owner: new FormControl('', Validators.required),\n      adminCompany: new FormControl('', Validators.required),\n      propertyType: new FormControl('', Validators.required),\n      address: new FormControl('', Validators.required),\n      city: new FormControl('', Validators.required),\n      state: new FormControl('New York'),\n      zip: new FormControl('', Validators.required),\n      wsh_dry: new FormControl(''),\n      elevator: new FormControl(''),\n      totalUnit: new FormControl(''),\n      amount_fine: new FormControl(''),\n      remarks: new FormControl(''),\n      Units: new FormControl('')\n    });\n\n    this.unitDataForm = new FormGroup({\n      building: new FormControl(''),\n      unitNo: new FormControl(''),\n      unitType: new FormControl('', Validators.required),\n      beds: new FormControl(''),\n      baths: new FormControl(''),\n      floors: new FormControl(''),\n      rent: new FormControl(''),\n      security: new FormControl('')\n    });\n\n    this.companyForm = new FormGroup({\n      companyName: new FormControl('SMYM Realty'),\n      city: new FormControl('', Validators.required),\n      state: new FormControl({ value: 'New York', disabled: true }),\n      address: new FormControl(''),\n      companyType: new FormControl('', Validators.required),\n      zip: new FormControl(''),\n      phone: new FormControl(''),\n      mobile: new FormControl(['', Validators.required, Validators.minLength(7)]),\n      email: new FormControl('', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")])\n    });\n\n    this.leaseForm = new FormGroup({\n      building: new FormControl(''),\n      city: new FormControl('', Validators.required),\n      state: new FormControl({ value: 'New York', disabled: true }),\n      unitNo: new FormControl(''),\n      firstName: new FormControl('', Validators.required),\n      lastName: new FormControl('', Validators.required),\n      socialSecurity: new FormControl(''),\n      phone: new FormControl(''),\n      mobile: new FormControl(['', Validators.required, Validators.minLength(7)]),\n      legalRent: new FormControl(''),\n      prefRent: new FormControl(''),\n      securityHeld: new FormControl(''),\n      leaseStartDate: new FormControl(''),\n      leaseEndDate: new FormControl(''),\n      email: new FormControl('', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]),\n      remarks: new FormControl('')\n    });\n\n    this.incomeForm = new FormGroup({\n      incomeType: new FormControl(''),\n      amount: new FormControl(''),\n      dateOfIncome: new FormControl(''),\n      remarks: new FormControl('')\n    });\n\n    this.expenseForm = new FormGroup({\n      building: new FormControl('586 Union Street'),\n      expenseType: new FormControl('', Validators.required),\n      amountDue: new FormControl(''),\n      amountPaid: new FormControl(''),\n      dueDate: new FormControl(''),\n      datePaid: new FormControl(''),\n      comments: new FormControl('')\n    });\n\n    this.taskForm = new FormGroup({\n      building: new FormControl('586 Union Street'),\n      taskType: new FormControl('', Validators.required),\n      unitNo: new FormControl(''),\n      taskStatus: new FormControl(''),\n      taskStartDate: new FormControl(''),\n      taskEndDate: new FormControl(''),\n      taskDescription: new FormControl('')\n    });\n\n    this.employeeForm = new FormGroup({\n      building: new FormControl({ value: '586 Union Street', disabled: false }),\n      firstName: new FormControl('', Validators.required),\n      lastName: new FormControl('', Validators.required),\n      employementStartDate: new FormControl(''),\n      employementEndDate: new FormControl(''),\n      salary: new FormControl(''),\n      remarks: new FormControl('')\n    });\n\n    this.rentForm = new FormGroup({\n      building: new FormControl({ value: '586 Union Street', disabled: false }),\n      month: new FormControl('', Validators.required),\n      year: new FormControl('', Validators.required),\n      tenantName: new FormControl('', Validators.required),\n      unitNo: new FormControl(''),\n      discount: new FormControl(''),\n      charges: new FormControl(''),\n      rent: new FormControl('', Validators.required),\n      paidRent: new FormControl(''),\n      rentDueDate: new FormControl(''),\n      datePaid: new FormControl(''),\n      previousBalance: new FormControl(''),\n      chequeNo: new FormControl(''),\n      bankName: new FormControl(''),\n      comments: new FormControl(''),\n      managementFee: new FormControl(''),\n      garageFee: new FormControl(''),\n      storageSpaceFee: new FormControl(''),\n      antennaFee: new FormControl(''),\n      internetFee: new FormControl('')\n    });\n\n    this.singleRentForm = new FormGroup({\n      building: new FormControl({ value: '586 Union Street', disabled: false }),\n      leaseID: new FormControl(''),\n      month: new FormControl(''),\n      year: new FormControl(''),\n      tenantName: new FormControl(''),\n      unitNo: new FormControl(''),\n      discount: new FormControl(''),\n      charges: new FormControl(''),\n      rent: new FormControl(''),\n      paidRent: new FormControl(''),\n      rentDueDate: new FormControl(''),\n      datePaid: new FormControl(''),\n      previousBalance: new FormControl(''),\n      chequeNo: new FormControl(''),\n      bankName: new FormControl(''),\n      comments: new FormControl('')\n    });\n\n  }\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  companyTypeOptions = [{ value: 'Admin' }, { value: 'Owner' }];\n\n  cityOptions = [{ value: 'Bronx' }, { value: 'Brooklyn' }, { value: 'Manhattan' }, { value: 'Queens' }, { value: 'State Island' }];\n\n  propertyOptions = [{ value: 'Co-op Apartments' }, { value: 'Residential' }, { value: 'Commercial' }, { value: 'Residential/Commercial' }];\n\n  unitTypeOptions = [{ value: 'Apartment' }, { value: 'Studio' }, { value: 'Office' }, { value: 'Commercial' }];\n\n  unitNoOptions = [{ value: '1L' }, { value: '1R' }, { value: '2L' }, { value: '2R' }, { value: '3L' }, { value: '3R' }, { value: '4L' }, { value: '4R' }];\n\n  incomeTypeOptions = [{ value: 'Profit Earned' }, { value: 'Royalties' }];\n\n  expenseTypeOptions = [{ value: 'Advertisement' }, { value: 'Auto & Travel' }, { value: 'Cleaning & Maintenance' }, { value: 'Commission' },\n  { value: 'Depreciation' }, { value: 'Electric' }, { value: 'Employee Salary' }, { value: 'Fuel / Heat' }, { value: 'Insurance' },\n  { value: 'Interest (Non-Mortgage)' }, { value: 'Legal & Professional Fees' }, { value: 'Management Fee' }, { value: 'Mortgage Interest Paid to Banks' },\n  { value: 'New Construction' }, { value: 'Other' }, { value: 'Repair' }];\n\n  taskTypeOptions = [{ value: 'Plumbing' }, { value: 'Heating' }, { value: 'Repair' }, { value: 'Air Conditioning' }];\n\n  taskStatusOptions = [{ value: 'Completed' }, { value: 'In Progress' }, { value: 'On Hold' }];\n\n  yearOptions = [{ value: '2011' }, { value: '2012' }, { value: '2013' }, { value: '2014' }, { value: '2015' }, { value: '2016' },\n  { value: '2017' }, { value: '2018' }, { value: '2019' }, { value: '2020' }, { value: '2021' }, { value: '2022' }, { value: '2023' }];\n\n\n\n  /////////////////////////////////------ADD BUILDING DATA TO FIRESTORE------///////////////////////////////////\n\n  addBuildingDataToFirestore() {\n\n    let userObject = this.buildingDataForm.value;\n    const id = this.firestore.createId();\n    userObject['id'] = id;\n    this.ApiService.addBuilding(userObject);\n    this.buildingDataForm.reset();\n  }\n\n  /////////////////////////////////------ADD UNIT DATA TO FIRESTORE------///////////////////////////////////\n\n  onBuilingDropDown(event: Event) {\n    this.selectedBuildingId = (event.target as HTMLSelectElement).value;\n    console.log('building dropdown id: ', this.selectedBuildingId)\n  }\n\n  /////////////////////////////////------UNIT DETAILS FOR LEASE MODAL----//////////////////////////////////\n  unitDropdownforLease(){\n    const id= this.selectedBuildingId;\n    \n  }\n\n\n  addUnitDataToFirestore() {\n\n    const selectedunitNo = this.unitDataForm.value.unitNo;\n    console.log('selectedunitNo : ', selectedunitNo);\n\n    const unitObject = { [selectedunitNo]: this.unitDataForm.value };\n\n    console.log('unitObject', unitObject);\n\n    this.ApiService.updateUnitToBuilding(unitObject, this.selectedBuildingId);\n    // this.resetUnitForm();\n  }\n\n\n  ////////////////////////////////////////-------FORM CONTROL METHOD----/////////////////////////////////////////////////\n  get fBuild() {\n    return this.buildingDataForm.controls;\n  }\n\n  get fUnit() {\n    return this.unitDataForm.controls;\n  }\n\n  get fCompany() {\n    return this.companyForm.controls;\n  }\n\n  get fLease() {\n    return this.leaseForm.controls;\n  }\n\n  get fIncome() {\n    return this.incomeForm.controls;\n  }\n\n  get fExpense() {\n    return this.expenseForm.controls;\n  }\n\n  get fTask() {\n    return this.taskForm.controls;\n  }\n\n  get fEmployee() {\n    return this.employeeForm.controls;\n  }\n\n  get fRent() {\n    return this.rentForm.controls;\n  }\n\n  get fSingleRent() {\n    return this.singleRentForm.controls;\n  }\n\n\n  submitBuildingForm() {\n    console.log('buildingDataForm', this.buildingDataForm.value);\n  }\n  submitCompanyForm() {\n    console.log('companyForm', this.companyForm.value);\n  }\n\n  submitLeaseForm() {\n    console.log('leaseForm', this.leaseForm.value);\n  }\n\n  submitIncomeForm() {\n    console.log('incomeForm', this.incomeForm.value);\n  }\n\n  submitExpenseForm() {\n    console.log('expenseForm', this.expenseForm.value);\n  }\n\n  submitTaskForm() {\n    console.log('taskForm', this.taskForm.value);\n  }\n\n  submitEmployeeForm() {\n    console.log('employeeForm', this.employeeForm.value);\n  }\n\n  submitRentForm() {\n    console.log('rentForm', this.rentForm.value);\n  }\n\n  submitSingleRentForm() {\n    console.log('singleRentForm', this.singleRentForm.value);\n  }\n\n\n\n  ////////////////////////////////////////-------RESET BUTTON METHOD----/////////////////////////////////////////////////\n  resetBuildingForm() {\n    this.buildingDataForm.reset();\n  }\n\n  resetUnitForm() {\n    this.unitDataForm.reset();\n  }\n\n  resetCompanyForm() {\n    this.companyForm.reset();\n  }\n\n  resetLeaseForm() {\n    this.leaseForm.reset();\n  }\n\n  resetIncomeForm() {\n    this.incomeForm.reset();\n  }\n\n  resetExpenseForm() {\n    this.expenseForm.reset();\n  }\n\n  resetTaskForm() {\n    this.taskForm.reset();\n  }\n\n  resetEmployeeForm() {\n    this.employeeForm.reset();\n  }\n\n  resetRentForm() {\n    this.rentForm.reset();\n  }\n\n  resetSingleRentForm() {\n    this.singleRentForm.reset();\n  }\n\n  ////////////////////////////////////////-------DELETE BUTTON METHOD----////////////////////////////////////////////////\n  public deleteLease(deleteIndexId: any) {\n    // debugger;\n    // this.ApiService.deleteUser(deleteIndexId);\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Admin/Desktop/Web Developement Course/ANGULAR/webapp-amms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"ngx-ui-loader\";\nexport class ApiService {\n  constructor(firestore, NgxUiLoaderService) {\n    this.firestore = firestore;\n    this.NgxUiLoaderService = NgxUiLoaderService;\n    this.subject = new Subject();\n  }\n\n  getBuildingsAPI() {\n    return this.firestore.collection('Buildings').valueChanges();\n  }\n\n  addBuilding(dataObject) {\n    return this.firestore.collection('Buildings').doc(dataObject.id).set(dataObject);\n  }\n\n  deleteBuilding(buildingIndexId) {\n    return this.firestore.collection('Buildings').doc(buildingIndexId).delete();\n  }\n\n  updateUnitToBuilding(unitObject, selectedBuildingId) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      //  return this.firestore.collection('Buildings').doc(SelectedBuildingId).update(unitObject);\n      const unitRef = _this.firestore.collection('Buildings').doc('selectedBuildingId');\n\n      const unionRes = yield unitRef.update({\n        unitDetails: unitObject.arrayUnion('unitObject')\n      }); // return this.firestore.collection('Buildings').doc(selectedBuildingId).update({ 'unitDetails': (unitObject) });\n    })();\n  } // return this.firestore.collection('Buildings').doc(selectedBuildingId).update(unitObject);\n\n\n  ngxUiLoader() {\n    this.NgxUiLoaderService.start();\n    setTimeout(() => {\n      this.NgxUiLoaderService.stop();\n    }, 2000);\n  }\n\n  setData(data) {\n    this.index = data;\n  }\n\n  getData() {\n    return this.index;\n  }\n\n}\n\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.NgxUiLoaderService));\n};\n\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\Web Developement Course\\ANGULAR\\webapp-amms\\src\\app\\services\\api.service.ts"],"names":[],"mappings":";AACA,SAAqB,OAArB,QAAoC,MAApC;;;;AASA,OAAM,MAAO,UAAP,CAAiB;AAKrB,EAAA,WAAA,CACU,SADV,EAEU,kBAFV,EAEgD;AADtC,SAAA,SAAA,GAAA,SAAA;AACA,SAAA,kBAAA,GAAA,kBAAA;AALF,SAAA,OAAA,GAAU,IAAI,OAAJ,EAAV;AAMH;;AAEL,EAAA,eAAe,GAAA;AACb,WAAO,KAAK,SAAL,CAAe,UAAf,CAA0B,WAA1B,EAAuC,YAAvC,EAAP;AACD;;AAED,EAAA,WAAW,CAAC,UAAD,EAAkB;AAC3B,WAAO,KAAK,SAAL,CAAe,UAAf,CAA0B,WAA1B,EAAuC,GAAvC,CAA2C,UAAU,CAAC,EAAtD,EAAiE,GAAjE,CAAqE,UAArE,CAAP;AACD;;AAED,EAAA,cAAc,CAAC,eAAD,EAAqB;AACjC,WAAO,KAAK,SAAL,CAAe,UAAf,CAA0B,WAA1B,EAAuC,GAAvC,CAA2C,eAA3C,EAA4D,MAA5D,EAAP;AACD;;AAEK,EAAA,oBAAoB,CAAC,UAAD,EAAkB,kBAAlB,EAAyC;AAAA;;AAAA;AACjE;AACA,YAAM,OAAO,GAAG,KAAI,CAAC,SAAL,CAAe,UAAf,CAA0B,WAA1B,EAAuC,GAAvC,CAA2C,oBAA3C,CAAhB;;AACA,YAAM,QAAQ,SAAS,OAAO,CAAC,MAAR,CAAe;AAAE,QAAA,WAAW,EAAE,UAAU,CAAC,UAAX,CAAsB,YAAtB;AAAf,OAAf,CAAvB,CAHiE,CAOjE;AAPiE;AASlE,GA/BoB,CAiCrB;;;AAOA,EAAA,WAAW,GAAA;AACT,SAAK,kBAAL,CAAwB,KAAxB;AACA,IAAA,UAAU,CAAC,MAAK;AACd,WAAK,kBAAL,CAAwB,IAAxB;AACD,KAFS,EAEP,IAFO,CAAV;AAGD;;AAED,EAAA,OAAO,CAAC,IAAD,EAAU;AACf,SAAK,KAAL,GAAa,IAAb;AACD;;AAED,EAAA,OAAO,GAAA;AACL,WAAO,KAAK,KAAZ;AACD;;AArDoB;;;mBAAV,U,EAAU,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,gBAAA,C,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,kBAAA,C;AAAA,C;;;SAAV,U;AAAU,EAAA,OAAA,EAAV,UAAU,CAAA,I;AAAA,EAAA,UAAA,EAFT","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\nimport { Model } from 'src/app/model.model';\r\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  index: any;\r\n  private subject = new Subject<any>();\r\n\r\n\r\n  constructor(\r\n    private firestore: AngularFirestore,\r\n    private NgxUiLoaderService: NgxUiLoaderService\r\n  ) { }\r\n\r\n  getBuildingsAPI(): Observable<any> {\r\n    return this.firestore.collection('Buildings').valueChanges();\r\n  }\r\n\r\n  addBuilding(dataObject: Model) {\r\n    return this.firestore.collection('Buildings').doc(dataObject.id as any).set(dataObject);\r\n  }\r\n\r\n  deleteBuilding(buildingIndexId: any) {\r\n    return this.firestore.collection('Buildings').doc(buildingIndexId).delete();\r\n  }\r\n\r\n  async updateUnitToBuilding(unitObject: any, selectedBuildingId: any) {\r\n    //  return this.firestore.collection('Buildings').doc(SelectedBuildingId).update(unitObject);\r\n    const unitRef = this.firestore.collection('Buildings').doc('selectedBuildingId');\r\n    const unionRes = await unitRef.update({ unitDetails: unitObject.arrayUnion('unitObject') });\r\n\r\n\r\n\r\n    // return this.firestore.collection('Buildings').doc(selectedBuildingId).update({ 'unitDetails': (unitObject) });\r\n\r\n  }\r\n\r\n  // return this.firestore.collection('Buildings').doc(selectedBuildingId).update(unitObject);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ngxUiLoader() {\r\n    this.NgxUiLoaderService.start();\r\n    setTimeout(() => {\r\n      this.NgxUiLoaderService.stop();\r\n    }, 2000);\r\n  }\r\n\r\n  setData(data: any) {\r\n    this.index = data;\r\n  }\r\n\r\n  getData() {\r\n    return this.index\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
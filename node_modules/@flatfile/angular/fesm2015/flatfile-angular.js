import { flatfileImporter } from '@flatfile/sdk';
export { flatfileImporter } from '@flatfile/sdk';
import { CommonModule } from '@angular/common';
import { EventEmitter, Component, Input, Output, ViewChild, ElementRef, NgModule } from '@angular/core';

class FlatfileButtonComponent {
    constructor() {
        this.onInit = new EventEmitter();
        this.onUpload = new EventEmitter();
        this.onLaunch = new EventEmitter();
        this.onClose = new EventEmitter();
        this.onComplete = new EventEmitter();
        this.onError = new EventEmitter();
        this.isImporterLoaded = true;
    }
    ngOnInit() {
        if (!this.token) {
            console.error('ðŸ“¥ Flatfile Importer ERROR - "token" missing via @Input()');
            this.isImporterLoaded = false;
            return;
        }
        if (typeof flatfileImporter === 'undefined') {
            console.log('ðŸ“¥ Flatfile Importer ERROR - importer failed to load');
            this.isImporterLoaded = false;
            return;
        }
        this.flatfileImporter = flatfileImporter(this.token, Object.assign(Object.assign({}, (this.mountUrl ? { mountUrl: this.mountUrl } : {})), (this.apiUrl ? { apiUrl: this.apiUrl } : {})));
        this.flatfileImporter.on('init', (res) => this.onInit.next(res));
        this.flatfileImporter.on('upload', (res) => this.onUpload.next(res));
        this.flatfileImporter.on('launch', (res) => this.onLaunch.next(res));
        this.flatfileImporter.on('close', (res) => this.onClose.next(res));
        this.flatfileImporter.on('complete', (res) => this.onComplete.next(res));
    }
    ngOnDestroy() {
        this.flatfileImporter.close();
    }
    launch() {
        this.flatfileImporter.launch().catch((e) => {
            this.onError.next({ error: e });
        });
    }
}
FlatfileButtonComponent.decorators = [
    { type: Component, args: [{
                selector: 'flatfile-button',
                template: `
    <button (click)="launch()" [disabled]="!isImporterLoaded">
      <div #ref [class.hide]="!isImporterLoaded">
        <ng-content></ng-content>
      </div>
      <span *ngIf="!ref && !ref.innerHTML.trim() && isImporterLoaded"
        >ðŸ”¼ Upload with Flatfile</span
      >
      <span *ngIf="!isImporterLoaded">
        ðŸ…§ Failed to Load Flatfile Importer
      </span>
    </button>
  `,
                styles: [`
      .hide {
        display: none;
      }
    `]
            },] }
];
FlatfileButtonComponent.propDecorators = {
    token: [{ type: Input }],
    mountUrl: [{ type: Input }],
    apiUrl: [{ type: Input }],
    onInit: [{ type: Output }],
    onUpload: [{ type: Output }],
    onLaunch: [{ type: Output }],
    onClose: [{ type: Output }],
    onComplete: [{ type: Output }],
    onError: [{ type: Output }],
    ref: [{ type: ViewChild, args: ['ref', { read: ElementRef, static: true },] }]
};

class FlatfileAdapterModule {
}
FlatfileAdapterModule.decorators = [
    { type: NgModule, args: [{
                declarations: [FlatfileButtonComponent],
                imports: [CommonModule],
                exports: [FlatfileButtonComponent],
            },] }
];

/**
 * @note Public API Surface of angular-adapter
 */

/**
 * Generated bundle index. Do not edit.
 */

export { FlatfileAdapterModule, FlatfileButtonComponent };
//# sourceMappingURL=flatfile-angular.js.map

(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@flatfile/sdk'), require('@angular/common'), require('@angular/core')) :
  typeof define === 'function' && define.amd ? define('@flatfile/angular', ['exports', '@flatfile/sdk', '@angular/common', '@angular/core'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.flatfile = global.flatfile || {}, global.flatfile.angular = {}), global.sdk, global.ng.common, global.ng.core));
}(this, (function (exports, sdk, common, core) { 'use strict';

  var FlatfileButtonComponent = /** @class */ (function () {
      function FlatfileButtonComponent() {
          this.onInit = new core.EventEmitter();
          this.onUpload = new core.EventEmitter();
          this.onLaunch = new core.EventEmitter();
          this.onClose = new core.EventEmitter();
          this.onComplete = new core.EventEmitter();
          this.onError = new core.EventEmitter();
          this.isImporterLoaded = true;
      }
      FlatfileButtonComponent.prototype.ngOnInit = function () {
          var _this = this;
          if (!this.token) {
              console.error('ðŸ“¥ Flatfile Importer ERROR - "token" missing via @Input()');
              this.isImporterLoaded = false;
              return;
          }
          if (typeof sdk.flatfileImporter === 'undefined') {
              console.log('ðŸ“¥ Flatfile Importer ERROR - importer failed to load');
              this.isImporterLoaded = false;
              return;
          }
          this.flatfileImporter = sdk.flatfileImporter(this.token, Object.assign(Object.assign({}, (this.mountUrl ? { mountUrl: this.mountUrl } : {})), (this.apiUrl ? { apiUrl: this.apiUrl } : {})));
          this.flatfileImporter.on('init', function (res) { return _this.onInit.next(res); });
          this.flatfileImporter.on('upload', function (res) { return _this.onUpload.next(res); });
          this.flatfileImporter.on('launch', function (res) { return _this.onLaunch.next(res); });
          this.flatfileImporter.on('close', function (res) { return _this.onClose.next(res); });
          this.flatfileImporter.on('complete', function (res) { return _this.onComplete.next(res); });
      };
      FlatfileButtonComponent.prototype.ngOnDestroy = function () {
          this.flatfileImporter.close();
      };
      FlatfileButtonComponent.prototype.launch = function () {
          var _this = this;
          this.flatfileImporter.launch().catch(function (e) {
              _this.onError.next({ error: e });
          });
      };
      return FlatfileButtonComponent;
  }());
  FlatfileButtonComponent.decorators = [
      { type: core.Component, args: [{
                  selector: 'flatfile-button',
                  template: "\n    <button (click)=\"launch()\" [disabled]=\"!isImporterLoaded\">\n      <div #ref [class.hide]=\"!isImporterLoaded\">\n        <ng-content></ng-content>\n      </div>\n      <span *ngIf=\"!ref && !ref.innerHTML.trim() && isImporterLoaded\"\n        >\uD83D\uDD3C Upload with Flatfile</span\n      >\n      <span *ngIf=\"!isImporterLoaded\">\n        \uD83C\uDD67 Failed to Load Flatfile Importer\n      </span>\n    </button>\n  ",
                  styles: ["\n      .hide {\n        display: none;\n      }\n    "]
              },] }
  ];
  FlatfileButtonComponent.propDecorators = {
      token: [{ type: core.Input }],
      mountUrl: [{ type: core.Input }],
      apiUrl: [{ type: core.Input }],
      onInit: [{ type: core.Output }],
      onUpload: [{ type: core.Output }],
      onLaunch: [{ type: core.Output }],
      onClose: [{ type: core.Output }],
      onComplete: [{ type: core.Output }],
      onError: [{ type: core.Output }],
      ref: [{ type: core.ViewChild, args: ['ref', { read: core.ElementRef, static: true },] }]
  };

  var FlatfileAdapterModule = /** @class */ (function () {
      function FlatfileAdapterModule() {
      }
      return FlatfileAdapterModule;
  }());
  FlatfileAdapterModule.decorators = [
      { type: core.NgModule, args: [{
                  declarations: [FlatfileButtonComponent],
                  imports: [common.CommonModule],
                  exports: [FlatfileButtonComponent],
              },] }
  ];

  /**
   * @note Public API Surface of angular-adapter
   */

  /**
   * Generated bundle index. Do not edit.
   */

  Object.defineProperty(exports, 'flatfileImporter', {
    enumerable: true,
    get: function () {
      return sdk.flatfileImporter;
    }
  });
  exports.FlatfileAdapterModule = FlatfileAdapterModule;
  exports.FlatfileButtonComponent = FlatfileButtonComponent;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=flatfile-angular.umd.js.map
